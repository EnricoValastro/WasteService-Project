System ledqak

Dispatch turnOn : turnOn(_)
Dispatch turnOff : turnOff(_)
Dispatch blink : blink(_)

Context ctxledqak ip [host="localhost" port=8057]

QActor ledqakactor context ctxledqak {
	[#var ledState = led.state.LedState(led.state.CurrStateLed.OFF)#]
	
	State setup initial {
		println("$name | setup")
	}Goto off
	
	State on {
		[#
			ledState.updateLedState(led.state.CurrStateLed.ON)	
		#]
		printCurrentMessage
		updateResource[#ledState.toJsonString()#]
	}
	Transition t0 whenMsg blink -> blink
					whenMsg turnOff -> off
	
	
	State off{
		[#
			ledState.updateLedState(led.state.CurrStateLed.OFF)	
		#]
		printCurrentMessage
		updateResource[#ledState.toJsonString()#]
	}
	Transition t0 whenMsg turnOn -> on
					whenMsg blink -> blink
	
	
	State blink{
		[#
			ledState.updateLedState(led.state.CurrStateLed.BLINKING)	
		#]
		printCurrentMessage
		updateResource[#ledState.toJsonString()#]
	}
	Transition t0 whenMsg turnOn -> on
					whenMsg turnOff -> off
	
	
}