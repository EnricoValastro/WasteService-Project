System wasteservice

//messaggi containerManager
Request evalreq : evalreq(MAT,QUA)
Reply evalOk : evalOk(_)
Reply evalKo : evalKo(_)
Dispatch update : update(MAT,QUA)
Dispatch exit : exit(_)

//messaggi wasteService
Request storeWaste : storeWaste(MATERIAL, TRUCKLOAD)
Dispatch doJob : doJob(_)

Reply pickupdone : pickupdone(_)
Reply dropoutdone : dropoutdone(_)


Context ctxwasteservice ip [host="localhost" port=8055]
Context ctxtransporttrolley ip [host="127.0.0.1" port=8056]

ExternalQActor transportrolleycore context ctxtransporttrolley


QActor containermanager context ctxwasteservice{
	State init initial {
		
	}Goto idle
	
	State idle {
		
	}Transition t0 whenRequest evalreq -> evaluation
					whenMsg update -> update
					whenMsg exit -> end
	
	
	State evaluation {
		//calcoli
		//replyTo 
	}Goto idle
	
	State update {
		
	}Goto idle
	
	State end {
		
	}
}

QActor wasteservicehandler context ctxwasteservice{
	State init initial{
		println("$name	|	setup")
	}Goto idle
	
	State idle{
		println("$name	|	in idle")
	}Transition t0 whenRequest storeWaste -> evalReq
					whenMsg exit -> end
	
	State evalReq{
		
	}Transition t0 whenReply evalOk -> acceptRequest
					whenReply evalKo -> rejectRequest
	
	State acceptRequest{
		
	}Goto idle
	
	State rejectRequest{
		
	}Goto idle
	
	State end{
		
	}
	
}

 

QActor wasteservicecore context ctxwasteservice{
	State init initial{
		println("$name 	| 	setup")
	}Goto idle
	
	State idle{
		println("$name 	| 	in idle")
	}Transition t0 whenMsg doJob -> pickup
					whenReply dropoutdone -> backHome
					whenMsg exit -> end
					
	State backHome{
		
	}Goto idle
	
	State pickup{
		
	}Transition t0 whenReply dropoutdone -> clear
					whenReply pickupdone -> dropout
	
	State clear{
		
	}Transition t0 whenReply pickupdone -> dropout
	
	State dropout{
		
	}Goto idle
	
	State end{
		
	}
}