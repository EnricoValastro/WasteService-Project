/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/6.7.1/samples
 
 https://kotlinlang.org/docs/mixing-java-kotlin-intellij.html
 */
plugins {
    id 'java'
    id 'eclipse'
    id 'application'
	id 'jacoco'
    id 'org.jetbrains.kotlin.jvm' version '1.5.30'
}
repositories {
    jcenter()
    flatDir { dirs '../unibolibs' }
}

version '3.0'
sourceCompatibility = 1.8

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    
//KOTLIN
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    //implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: '1.6.21'
//COROUTINE
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core-common', version: '1.3.8'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.6.0'

//MQTT (required by actors)
	implementation group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.5'
//COAP (required by actors)
	// https://mvnrepository.com/artifact/org.eclipse.californium/californium-core
	implementation group: 'org.eclipse.californium', name: 'californium-core', version: '2.0.0-M12'
	// https://mvnrepository.com/artifact/org.eclipse.californium/californium-proxy
	implementation group: 'org.eclipse.californium', name: 'californium-proxy', version: '2.0.0-M12'

//SOCKET.IO (for WEnv)
	compileOnly group: 'javax.websocket', name: 'javax.websocket-api', version: '1.1'
    //javax.websocket api is only the specification
	implementation group: 'org.glassfish.tyrus.bundles', name: 'tyrus-standalone-client', version: '1.9'

//OkHttp library for websockets with Kotlin
	//implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.14.0'    
	implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.3' 
	// https://mvnrepository.com/artifact/com.squareup.okhttp3/mockwebserver
	testImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '4.9.3'

//LOGGING
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
	implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'

//JSON
    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20160810'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'

//CUSTOM unibo
    implementation name: '2p301'
    implementation name: 'uniboInterfaces'
    implementation name: 'unibonoawtsupports'
	implementation name: 'it.unibo.qakactor-2.7'
	implementation name: 'unibo.actor22-1.1'

 	//PLANNER
    implementation name: 'it.unibo.planner20-1.0'
 	// https://mvnrepository.com/artifact/com.googlecode.aima-java/aima-core
	implementation group: 'com.googlecode.aima-java', name: 'aima-core', version: '3.0.0'
 
}

sourceSets {
    main.java.srcDirs += 'src'
    main.java.srcDirs += 'resources'
    test.java.srcDirs += 'test'
}

//Avoid duplication of src in Eclipse
eclipse {
    classpath {
        sourceSets -= [sourceSets.main, sourceSets.test]
    }
}
 



/* 
mainClassName = 'unibo.radarSystem22.actors.main.DeviceActorsOnRasp'  

jar {
    from sourceSets.main.allSource
    manifest { attributes 'Main-Class': "$mainClassName" }
}

 
distributions {
    main {
        contents {
            from './RadarSystemConfig.json'
        }
    }
}
*/
//git rm --cached .project
//git rm --cached .classpath
