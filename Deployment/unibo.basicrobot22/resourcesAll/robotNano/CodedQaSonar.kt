


/*
QActor sonar context ctxsonar {     
[# val simulate = false
   lateinit var firstActorInPipe : ActorBasic 
#]
 	State s0 initial {  		 
 		discardMsg On	
 		  	  
  		println("sonar started")  
		//CREATE THE PIPE
		[#  if( simulate ) firstActorInPipe = sysUtil.getActor("sonarsimulator")!!  //generates simulated data
			else firstActorInPipe = sysUtil.getActor("sonardatasource")!! 			//generates REAL data
 			firstActorInPipe.
			subscribeLocalActor("datacleaner"). 		//removes 'wrong' data''
			subscribeLocalActor("datalogger").		    //logs (shows) the data generated by the sonar
  			//subscribeLocalActor("sonar").				//handles sonarRobot but does not propagate ...
 			subscribeLocalActor("distancefilter").		//propagates the lcoal stream event obstacle
  			subscribeLocalActor("sonar")  
		#]    
		//ACTIVATE THE DATA SOURCE   
		if [# simulate #]{forward sonarsimulator -m simulatorstart : simulatorstart(qasource) }
 		else{ forward sonardatasource -m simulatorstart : simulatorstart(qasource) }
  	}  
*/